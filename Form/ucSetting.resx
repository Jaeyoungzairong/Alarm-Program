<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lbMusicPlay.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACUAAAAlCAYAAADFniADAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADZGlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4wLWMwNjAgNjEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNv
        bS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlw
        ZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1w
        TU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjRDQjcyRkI5RDMxM0U0MTFBQUFGODM0MUU0QUE5
        NEMwIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjk2NDc2RDQyNThGQzExRTQ4MUVCOURFODg3QjU1
        NEJBIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjk2NDc2RDQxNThGQzExRTQ4MUVCOURFODg3QjU1
        NEJBIiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDUzUgV2luZG93cyI+IDx4bXBNTTpE
        ZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOjIxMDk2MTRERjA1OEU0MTFBRjVDRTVD
        NTNDQjFCRjRBIiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOjRDQjcyRkI5RDMxM0U0MTFBQUFGODM0
        MUU0QUE5NEMwIi8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hw
        YWNrZXQgZW5kPSJyIj8+Smm03gAAAyRJREFUWEfNl1tIFGEYhrWzlZiWRmVFB4gS6kIqAqOCvBS66EKi
        m/LCO4MOVAR6YxhYhBAdMEOQSsRKDLTMQ1LYidDMTmxQIVoaaWatra5u7xffiDvvrO5hbPvggZ133v/7
        X3bm/2cmwuPx/HdYiuHGUgw3JERGp/9TzPMLJKg5EkwDU/W3VyM7Mc8vkKDmqMLi+u2btp1Iwu84IAG9
        mtmFeX6BBDXHPWh6W/Sj3/ntYlHtKRyvAdFgip63DfP8AglqTqi+13Idx3/rw6fu98eyr2VCXw6igG2X
        FO0JEtScUFXTXIpjr3r8zNGwMy03FecXghnqDQm0JUhQs2UoqYGBwd+VVc9LYhP3b4AvFoR0v6ElQYKa
        fYYyqqu7r6vgQnUOvKvBXBDUJUUrggQ1TxjKqHeOzrbMrMI9GJMIZoGAwqEFQYKa/Q4l5XYPu7Fa76Sk
        5uzA2Hjg9yXFcIIENQcUyihsIf2l5U3nMX4diAGy+XqFMINhBAlqDiqUUZ+/9HaczL91CH1WgtnA5yWF
        nSBBzSGFMqql9ePTvRnndqPfYjATUDjYCBLUbEsoqcFB91BNfeuNtckHt6DvfOB1v8FCkKBm20IZ9b3v
        V2/ZzUd56L0AjP5jOEWQoGbbQ0l1f+1z5Bfc3oz+owsAMkHCZISSVVl8tfEs+sqD3WujxWmCBDXbEkru
        p7r7bZXJKce3oqdcNtq/YCNIUHPIoV69aW/RnX4JsFx5AqwECWoOOpQ8E/POVBxFj1VgDvC5RwkYQpCg
        5oBDOZ0uZ3nFk8txSzPWY/w8MOFuLmAoQYKa/Q41PDwyMuY9KwFM1x5+gRYECWr2K5S8kR44UrwP/mUg
        qDdStCFIUPO4oXp6f/ZculIrG6GxxIN+d0c7ggQ1W4ZyuYZcd+telCVtPCwboC1fOWhLkKBmCiUP113p
        p9NwbhHwucQDBa0JEtQcX9vwsgTHno7Onvbs3LIsaCuArV8ywti5DUhQc0zjw9c5+Lfy8dt4YbP9m08w
        zy+QoGa5V+TjUwj5vhkP8/wCCVYDJxPz/AIJVgMnE/P8gqUYbizFcGMphhdPxB+vQ1g9tHtQQwAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>